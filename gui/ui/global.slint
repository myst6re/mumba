import { Palette } from "std-widgets.slint";
export enum TextLevel { info, warn, error }
export struct FfnxConfig {
    renderer_backend: int,
    fullscreen: bool,
    borderless: bool,
    enable_vsync: bool,
    enable_antialiasing: int,
    enable_anisotropic: bool,
    ff8_use_gamepad_icons: bool,
    current_resolution: int,
    current_refresh_rate: int,
    internal_resolution_scale: int,
    enable_bilinear: bool,
    window_size_x: int,
    window_size_y: int,
}

export global Fluent {
    pure callback get-message(string) -> string;
}

export global Installations {
    in property <string> game-path;
    in property <string> game-exe-path;
    in property <int> update-channel : 0;
    in property <int> language : 0;
    in-out property <int> current-page : 0;
    in property <string> task-text;
    in property <TextLevel> task-text-type : info;
    in property <bool> is-ready : false;
    in property <bool> is-initialized : false;
    in property <[string]> resolutions : [Fluent.get-message("auto")];
    in property <[string]> refresh-rates : [Fluent.get-message("auto")];

    pure callback setup(string, int, int);
    pure callback set-current-lang(int);
    pure callback launch-game();
    pure callback launch-cw();
    pure callback browse-game(string) -> string;
    pure callback configure-ffnx();
    pure callback cancel-configure-ffnx();
    pure callback upgrade-ffnx();
    pure callback open-logs();

    pure callback set-ffnx-config-bool(string, bool);
    pure callback set-ffnx-config-int(string, int);
    pure callback set-ffnx-config-string(string, string);
    pure callback set-ffnx-config-current-refresh-rate(int, int);

    in property <FfnxConfig> ffnx-config;
}
